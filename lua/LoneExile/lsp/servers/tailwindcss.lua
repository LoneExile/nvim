local M = {}
M.setup = function(lspconfig, capabilities)
  lspconfig.tailwindcss.setup({
    cmd = { 'tailwindcss-language-server', '--stdio' },
    capabilities = capabilities,
    filetypes = {
      'aspnetcorerazor',
      'astro',
      'astro-markdown',
      'blade',
      'django-html',
      'htmldjango',
      'edge',
      'eelixir',
      'elixir',
      'ejs',
      'erb',
      'eruby',
      'gohtml',
      'haml',
      'handlebars',
      'hbs',
      'html',
      'html-eex',
      'heex',
      'jade',
      'leaf',
      'liquid',
      -- 'markdown',
      'mdx',
      'mustache',
      'njk',
      'nunjucks',
      'php',
      'razor',
      'slim',
      'twig',
      'css',
      'less',
      'postcss',
      'sass',
      'scss',
      'stylus',
      'sugarss',
      'javascript',
      'javascriptreact',
      'reason',
      'rescript',
      'typescript',
      'typescriptreact',
      'vue',
      'svelte',
      'templ',
    },
    root_dir = function(fname)
      return lspconfig.util.root_pattern(
        'tailwind.config.js',
        'tailwind.config.ts',
        'tailwind.config.cjs',
        'tailwind.config.mjs',
        'tailwind.config.json',
        'postcss.config.js',
        'postcss.config.ts',
        'postcss.config.cjs',
        'postcss.config.mjs',
        'postcss.config.json',
        'package.json',
        'node_modules',
        '.git'
      )(fname) or lspconfig.util.path.dirname(fname)
    end,
    init_options = {
      userLanguages = {
        eelixir = 'html-eex',
        eruby = 'erb',
      },
    },
    settings = {
      tailwindCSS = {
        classAttributes = { 'class', 'className', 'classList', 'ngClass' },
        lint = {
          cssConflict = 'warning',
          invalidApply = 'error',
          invalidConfigPath = 'error',
          invalidScreen = 'error',
          invalidTailwindDirective = 'error',
          invalidVariant = 'error',
          recommendedVariantOrder = 'warning',
        },
        validate = true,
        experimental = {
          classRegex = {},
        },
      },
    },
  })
end
return M
